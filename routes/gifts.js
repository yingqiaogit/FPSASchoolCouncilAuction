/**
 * Created by a on 10/29/2015.
 */

module.exports=function(app){

    var async = require('async');
    var extend = require('extend');

    var gifts_db = app.locals.dbs.gifts.handler;


    var store_new_item = function(doc, next,res){

        //store the doc in the queries db
        //the primary key is the id autogenerated
        /* the item is as
        *  doc:
        *     title:
        *     value:
        *     number:
        *     remain:
        *     primary_url:
        *  register:
        *     amount:
        *     email:
        *
        */

        gifts_db.insert(doc,null,function(err,body){
            if (!err)
                console.log('stored correctly with information as ' + body);
            else
                console.log(err);
            next(res);
        });
    };

    var retrieve_items = function(res){

        var gifts=[];

        //the admin can see all of the items
        //other users can see approved item only
        gifts_db.list({include_docs:true},function(err,body){
            if (!err){

                //should contain _id with the title
                body.rows.forEach(function(row){
                    var gift = row.doc.doc;
                    gift.id = row.doc._id;
                    console.log("row is " + JSON.stringify(row));

                    console.log('gift doc as ' + JSON.stringify(gift));
                    gifts.push(gift);
                });
                res.json({gifts:gifts});
            }
            else
                res.status(500).send({status:'error'});
        });
    }

    //retrieve all of the titles from the doc
    app.get('/gifts/:operation',function(req,res){

       //returns the _id and titles
        var opt = req.params.operation;

        var screenName = (req.session && req.session.screen_name)? req.session.screen_name:null;

        if (opt == "list")
            retrieve_items(res);

        if (opt == 'registersuccess'){
            console.log("transaction success!");

            res.render('app/giftregistry_original.html', {note: "Your gift has been received. We appreciate!",
                                                          screen_name: screenName });
        }

        if (opt == 'registercancel'){
            console.log("transaction cancelled!");

            res.render('app/giftregistry_original.html', {note: "Your transaction has been cancelled.",
                                                          screen_name: screenName });

        }

    });


    app.post('/gifts/register', function(req,res){
        //bid information is contained in the request body
        var register_doc = JSON.parse(Object.keys(req.body)[0]);
        //retrieve the item from the db
        console.log("register item as " + JSON.stringify(register_doc));
        var key = register_doc.id;
        var register = register_doc.register;
        var pos = register_doc.pos;

        //push the bid into bids
        gifts_db.get(key, {revs_info:true}, function(err,body){
            if (!err){
                //return the found list of the doc
                console.log('body as' + JSON.stringify(body));

                if (!body.registers)
                    body.registers=[];

                body.registers.push(register);

                //change the amount of remains
                var remain = Number(body.doc.remain) - Number(register.amount);
                body.doc.remain = remain;

                //store the document back to the server
                gifts_db.insert(body, function(err,body){
                  if(!err)
                      res.status(200).send({remain:remain,
                                            pos: pos});
                  else
                      res.status(404).send({status: err});
                });

            }else {
                res.status(404).send({status: err});
            }
        } );

    });

}