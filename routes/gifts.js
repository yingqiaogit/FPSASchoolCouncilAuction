/**
 * Created by a on 10/29/2015.
 */

module.exports=function(app){

    var async = require('async');
    var extend = require('extend');

    var gifts_db = app.locals.dbs.gifts.handler;

    var request = require('request');

    var store_new_item = function(doc, next,res){

        //store the doc in the queries db
        //the primary key is the id autogenerated
        /* the item is as
        *  doc:
        *     title:
        *     value:
        *     number:
        *     remain:
        *     primary_url:
        *  register:
        *     amount:
        *     email:
        *
        */

        gifts_db.insert(doc,null,function(err,body){
            if (!err)
                console.log('stored correctly with information as ' + body);
            else
                console.log(err);
            next(res);
        });
    };

    var retrieve_items = function(res){

        var gifts=[];

        //the admin can see all of the items
        //other users can see approved item only
        gifts_db.list({include_docs:true},function(err,body){
            if (!err){

                //should contain _id with the title
                body.rows.forEach(function(row){
                    var gift = row.doc.doc;
                    gift.id = row.doc._id;
                    console.log("row is " + JSON.stringify(row));

                    console.log('gift doc as ' + JSON.stringify(gift));
                    gifts.push(gift);
                });
                res.json({gifts:gifts});
            }
            else
                res.status(500).send({status:'error'});
        });
    }

    //retrieve all of the titles from the doc
    app.get('/gifts/:operation',function(req,res){

       //returns the _id and titles
        var opt = req.params.operation;

        if (opt == "list")
            retrieve_items(res);

        if (opt == 'registersuccess'){
            console.log("register success");

            //process the pdf message
            var tx = req.query.tx;

            var form = {
                cmd: "_notify-synch",
                tx: tx,
                at: app.locals.paypal_token
            }

            request.post(
                'https://www.sandbox.paypal.com/cgi-bin/webscr',
                { form: form },
                function (error, response, body) {
                    if (!error && response.statusCode == 200 && body.indexOf("SUCCESS")==0) {
                        console.log(body)
                         //retrieve information from body
                        var txInfo = getTxInfo(body);
                        registerFunc(txInfo.key, txInfo.register);
                        res.redirect('/home/giftregistry?tx=success');
                    }else
                        res.redirect('home/giftregistry?tx=failure');

                }
            );
        }

        if (opt == 'registercancel'){
            console.log("register cancel");
            res.redirect('/home/giftregistry?tx=cancel');
        }

    });

    var getTxInfo= function(orgTx){

        var txInfo={
            key: null,
            register: {}
        };

        var searchwords= ["txn_id","item_name", "mc_gross", "payer_email", "mc_fee", "payment_date"];

        var start;
        var stop;
        var expected;

        searchwords.forEach(function(word){
           start = orgTx.indexOf(word);
           stop = orgTx.indexOf('\n',start);

           if (start>=0 && stop>=0) {
               expected = orgTx.substring(start, stop).split('=')[1];
               txInfo.register[word]=expected.replace(/\+/g,' ').replace(/%40/g,'@').replace(/%28/g,'(').replace(/%29/g,')').replace(/%3A/g,':').replace(/%2C/g,',');
           }
        });

        start = txInfo.register.item_name.indexOf('(');
        stop = txInfo.register.item_name.indexOf(')');

        txInfo.key=txInfo.register.item_name.substring(start+1,stop);

        delete txInfo.register.item_name;

        console.log("txInfo " + JSON.stringify(txInfo));

        return txInfo;
    };

    var registerFunc = function(key,register){

        /*
         "register":{
             "txn_id":"9WC39488S2484832S",
             "mc_gross":"45.00",
             "payer_email":"fpsascfundraising-test-buyer@gmail.com",
             "mc_fee":"1.61",
             "payment_date":"18:13:27 Apr 25, 2016 PDT"
         }
        */

        gifts_db.get(key, {revs_info:true}, function(err,body){
            if (!err){
                //return the found list of the doc
                console.log('body as' + JSON.stringify(body));

                if (!body.registers) {
                    body.registers = [];
                    body.txs=[];
                }

                //search if the transaction is duplicated:
                if (body.txs.indexOf(register.txn_id) >=0)
                    return;
                else
                    body.txs.push(register.txn_id);

                body.registers.push(register);

                //change the amount of remains

                if (body.doc.totalGiftValue)
                    body.doc.totalGiftValue = Number(body.doc.totalGiftValue) + Number(register.mc_gross) - Number(register.mc_fee);
                else
                    body.doc.totalGiftValue = Number(register.mc_gross) - Number(register.mc_fee);

                //store the document back to the server
                gifts_db.insert(body, function(err,body){
                    if(!err)
                        console.log("write success");
                    else
                        console.log("write failure");
                });

            }else {
                console.log("error");
            }
        } );
    };

}